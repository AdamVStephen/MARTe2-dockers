# syntax=docker/dockerfile:1
#
# multidistro version uses ARG DISTRO to implement DISTRO specific steps in stage marte2_distro
#
# Global Arguments : to access within any multi-stage target, must declare locally to that target
ARG DISTRO=ubuntu:18.04
ARG TZ="Europe/London"
ARG DEBIAN_FRONTEND=noninteractive

#############################################################################################################
# TARGET marte2_base : 
#############################################################################################################
FROM ${DISTRO} AS marte2_base
ENV TZ="$TZ"
ARG DEBIAN_FRONTEND

ARG PACKAGE_MANAGER=yum
#ARG UPDATE_CMD="yum update -y"
#ARG UPDATE_CMD="apt update && apt upgrade"
RUN $PACKAGE_MANAGER -y update && $PACKAGE_MANAGER -y upgrade

# Cache control use this with docker build --build-arg CACHE_DATE="$(date)" to force refresh.
ARG CACHE_DATE=1999-01-04

# Create a harmless exception for the set -u guards in the env scripts
ENV LD_LIBRARY_PATH=/root

# Allow introspection in the image 
ENV DOCKERHUB_IMAGE_NAME=MARTe2-baseline-ubuntu1804

# For packages with equivalent names in different distro families the following can simplify Dockerfiles.
#ARG INSTALL_CMD="yum -t install"
#ARG INSTALL_CMD="apt install -y"
ENV INSTALL_CMD="$PACKAGE_MANAGER install -y"

# Minimal requirements for cli work interactively
RUN $INSTALL_CMD tmux vim

# Using wget to retrieve SDN Source code
RUN $INSTALL_CMD wget

# To clone from some repos recursively requires git > 1.8.x (default centos) so jump through hoops
#
RUN yum -y install https://packages.endpointdev.com/rhel/7/os/x86_64/endpoint-repo.x86_64.rpm
RUN yum -y install git

# Scripts should work robustly from any reasonable directory.
ENV INSTALLATION_DIR=/opt/MARTe2/Projects

WORKDIR "$INSTALLATION_DIR"

COPY utils.sh utils.sh

#############################################################################################################
# TARGET marte2_packages : add packaged dependencies
#############################################################################################################
FROM marte2_base AS marte2_packages

# Multistage : propagate ARGs
ARG DEBIAN_FRONTEND
ARG TZ

COPY install-packages.sh install-packages.sh

RUN ./install-packages.sh

#############################################################################################################
# STARGET marte2_source : add source dependencies
#############################################################################################################
FROM marte2_packages AS marte2_source

# Multistage : propagate ARGs
ARG DEBIAN_FRONTEND
#ARG TZ

COPY install-sources.sh install-sources.sh

RUN ./install-sources.sh "${INSTALLATION_DIR}"

#############################################################################################################
# Compile EPICS support
#############################################################################################################
FROM marte2_source AS marte2_epics_built

ARG DEBIAN_FRONTEND
ARG TZ

ARG EPICS_VERSION=7.0.2

ENV EPICS_BASE=${INSTALLATION_DIR}/epics-base-${EPICS_VERSION}

ENV EPICSPVA=${INSTALLATION_DIR}/epics-base-${EPICS_VERSION}

ENV EPICS_HOST_ARCH=linux-x86_64

ENV SDN_CORE_INCLUDE_DIR=${INSTALLATION_DIR}/SDN_1.0.12_nonCCS/src/main/c++/include/

ENV SDN_CORE_LIBRARY_DIR=${INSTALLATION_DIR}/SDN_1.0.12_nonCCS/target/lib/

ENV PATH=$PATH:${INSTALLATION_DIR}/epics-base-${EPICS_VERSION}/bin/linux-x86_64

ENV LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$MARTe2_DIR/Build/x86-linux/Core/:$EPICS_BASE/lib/$EPICS_HOST_ARCH:$SDN_CORE_LIBRARY_DIR

ARG CA_ADDR_LIST=192.168.1.255

ENV EPICS_CA_ADDR_LIST=${CA_ADDR_LIST}

ENV EPICS_CA_AUTO_ADDR_LIST=NO

COPY build-epics.sh build-epics.sh

RUN ./build-epics.sh "${INSTALLATION_DIR}" "${EPICS_VERSION}"

#############################################################################################################
# Compile MARTe2
#############################################################################################################
FROM marte2_epics_built AS marte2_core_built

# Multistage : propagate ARGs
ARG DEBIAN_FRONTEND
ARG TZ

ENV MARTe2_DIR=${INSTALLATION_DIR}/MARTe2-dev

COPY build-marte2.sh build-marte2.sh

ARG MARTe2_REF=v1.6.0

RUN ./build-marte2.sh core "${INSTALLATION_DIR}" "${MARTe2_REF}"

#############################################################################################################
# Compile SDN
#############################################################################################################
FROM marte2_core_built AS marte2_sdn_built

# Multistage : propagate ARGs
ARG DEBIAN_FRONTEND
ARG TZ

RUN ./build-marte2.sh sdn "${INSTALLATION_DIR}" 

#############################################################################################################
# Compile MARTe2-components
#############################################################################################################
FROM marte2_sdn_built AS marte2_built

# Multistage : propagate ARGs
ARG DEBIAN_FRONTEND

ENV MARTe2_DIR=${INSTALLATION_DIR}/MARTe2-dev

ENV MARTe2_components_DIR=${INSTALLATION_DIR}/MARTe2-components

ARG MARTe2_components_REF=v1.5.1

RUN ./build-marte2.sh components "${INSTALLATION_DIR}" "${MARTe2_components_REF}"

#############################################################################################################
# Expose environment for dependent dockers
#############################################################################################################
FROM marte2_built AS marte2_env

COPY ./setenv.sh ./setenv.sh

ENV PATH="$PATH:$INSTALLATION_DIR"

CMD /bin/bash

